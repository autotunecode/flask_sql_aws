version: '3.8'

services:
  # PostgreSQLデータベース
  postgres:
    image: postgres:15-alpine
    container_name: image_api_postgres
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-imagedb}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    ports:
      - "5432:5432"
    networks:
      - image_api_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # MinIO (S3互換オブジェクトストレージ)
  minio:
    image: minio/minio:latest
    container_name: image_api_minio
    environment:
      MINIO_ROOT_USER: ${MINIO_ACCESS_KEY:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_SECRET_KEY:-minioadmin}
    volumes:
      - minio_data:/data
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - image_api_network
    command: server /data --console-address ":9001"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  # Flaskアプリケーション
  flask_app:
    build: .
    container_name: image_api_flask
    environment:
      - DB_HOST=postgres
      - POSTGRES_DB=${POSTGRES_DB:-imagedb}
      - POSTGRES_USER=${POSTGRES_USER:-postgres}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
      - MINIO_ENDPOINT_URL=http://minio:9000
      - MINIO_ACCESS_KEY=${MINIO_ACCESS_KEY:-minioadmin}
      - MINIO_SECRET_KEY=${MINIO_SECRET_KEY:-minioadmin}
      - MINIO_BUCKET_NAME=${MINIO_BUCKET_NAME:-images}
      - API_KEY=${API_KEY:-your-secret-api-key-here}
      - GEMINI_API_KEY=${GEMINI_API_KEY:-}
    ports:
      - "8000:8000"
    networks:
      - image_api_network
    depends_on:
      postgres:
        condition: service_healthy
      minio:
        condition: service_healthy
    volumes:
      - ./app:/app/app
    restart: unless-stopped

volumes:
  postgres_data:
  minio_data:

networks:
  image_api_network:
    driver: bridge 